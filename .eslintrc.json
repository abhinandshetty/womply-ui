{
  "env": {
    "browser": true,
    "es2021": true,
    "jest": true,
    "node": true
  },
  "extends": [
    "next/core-web-vitals",
    "plugin:@typescript-eslint/recommended",
    "eslint:recommended",
    "plugin:react/recommended",
    "plugin:react-hooks/recommended",
    "plugin:@next/next/recommended",
    "prettier"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaFeatures": {
      "jsx": true
    },
    "ecmaVersion": 12,
    "sourceType": "module"
  },
  "ignorePatterns": ["**/dist/*", "**/build/*"],
  "plugins": ["react", "@typescript-eslint", "eslint-plugin-prettier", "react-hooks"],
  "rules": {
    "prettier/prettier": ["error", { "endOfLine": "auto" }],
    "@typescript-eslint/interface-name-prefix": "off",
    "@typescript-eslint/no-explicit-any": "off",
    "@typescript-eslint/ban-ts-ignore": "off",
    "semi": "off",
    // We will use TypeScript"s types for component props instead
    "react/prop-types": "off",

    "@typescript-eslint/no-unused-vars": [
      "off",
      {
        "argsIgnorePattern": "^_"
      }
    ],

    "@typescript-eslint/explicit-function-return-type": [
      "warn",
      {
        "allowExpressions": true,
        "allowConciseArrowFunctionExpressionsStartingWithVoid": true
      }
    ],

    // Needed because of https://github.com/typescript-eslint/typescript-eslint/blob/master/packages/eslint-plugin/docs/rules/no-use-before-define.md#how-to-use & https://stackoverflow.com/questions/63818415/react-was-used-before-it-was-defined
    "no-use-before-define": "off",

    "react/display-name": "off",
    "@typescript-eslint/explicit-member-accessibility": "off",
    "@typescript-eslint/indent": "off",
    "@typescript-eslint/member-delimiter-style": "off",
    "@typescript-eslint/no-var-requires": "off",
    "no-console": ["error", { "allow": ["warn", "error"] }],
    "react/jsx-uses-react": "error",
    "react/jsx-uses-vars": "error",
    "react-hooks/rules-of-hooks": "error",
    "react-hooks/exhaustive-deps": "warn",
    "curly": ["error", "all"],
    "react/jsx-filename-extension": ["warn", { "extensions": [".ts", ".tsx"] }],
    "import/extensions": "off",
    "react/jsx-props-no-spreading": ["error", { "custom": "ignore" }],
    "react/no-unescaped-entities": "off",
    "import/no-cycle": ["off", { "ignoreExternal": true }],
    "prefer-const": "off",
    "@typescript-eslint/no-use-before-define": [
      "error",
      { "functions": false, "classes": false, "variables": true }
    ]
  }
}
